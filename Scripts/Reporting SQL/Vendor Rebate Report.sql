SELECT reb.BRAND_NAME,reb.REBATE_BILLING_METHOD,reb.SKU,reb.DESCRIPTION,reb.REBATE_TYPE,reb.REBATE_BILLING_PERIOD,reb.REBATE_START_DATE,reb.REBATE_END_DATE,sum(TRAN_QTY) AS TRAN_QTY,sum(reb.TRAN_COGS_AMT) AS TRAN_COGS_AMT,reb.REBATE_PERCENTAGE,reb.REBATE_DOLLAR_AMOUNT,sum(reb.REBATE_TOTAL) AS TRAN_AMT ,reb.LIST_ITEM_NAME,reb.CUST_VEND
from(
WITH test AS (SELECT ci.brand_name,tr.REBATE_billing_method,tr.sku,ci.description, tr.REBATE_TYPE,tr.REBATE_BILLING_PERIOD,tr.REBATE_START_DATE, tr.REBATE_END_DATE, tr.TRAN_QTY ,
CASE WHEN tr.tran_gl_date>= '2023-11-01' THEN tr.TRAN_COST_AMT ELSE tr.tran_cogs_amt END  as tran_cogs_amt ,tr.REBATE_PERCENTAGE,tr.REBATE_DOLLAR_AMOUNT,COALESCE(tr.REBATE_TOTAL,tr.tran_amt) AS rebate_total
FROM ods."TRANSACTIONS" tr
LEFT JOIN ods.NS_FC_XREF ns ON ns.NS_FC_ID = tr.LOCATION_ID 
LEFT JOIN ods.CURR_ITEMS ci ON ci.item_name = tr.SKU  AND COALESCE(ci.fc_id,2) = ns.ODS_FC_ID  
WHERE tr.TRAN_SUB_TYPE_ID in (111,16) AND tr.TRAN_GL_DATE BETWEEN $P{start_date} AND $P{end_date} and tr.cancel_type is null) 
SELECT tt.*,bm.LIST_ITEM_NAME,
COALESCE(mt.BILLING_CUSTOMER_ID ,mt.VENDOR_ID) AS cust_vend FROM test tt
LEFT JOIN (SELECT DISTINCT BRAND_ID,BRAND_RECORDS_NAME ,BILLING_CUSTOMER_ID ,VENDOR_ID  FROM ods.NS_VENDOR_REBATES ) mt ON mt.BRAND_RECORDS_NAME = tt.BRAND_NAME 
LEFT JOIN ods.BILLING_METHOD bm ON bm.LIST_ID =tt.rebate_billing_method
WHERE tt.rebate_start_date IS NOT NULL) reb 
group BY reb.BRAND_NAME,reb.REBATE_BILLING_METHOD,reb.SKU,reb.DESCRIPTION,reb.REBATE_TYPE,reb.REBATE_BILLING_PERIOD,reb.REBATE_START_DATE,reb.REBATE_END_DATE,reb.REBATE_PERCENTAGE,reb.REBATE_DOLLAR_AMOUNT,reb.LIST_ITEM_NAME,reb.CUST_VEND